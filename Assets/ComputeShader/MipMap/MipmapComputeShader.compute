// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

Texture2D _MainTex;
int4 _MainTex_Size;

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

float4 calcAvg(int2 coord) {
    if (coord.x < 0 || coord.y < 0 || coord.x >= _MainTex_Size.x || coord.y >= _MainTex_Size.y)
        return false;
    int x = coord.x*2;
    int y = coord.y*2;

    float4 avg = (_MainTex[int2(x,y)] + _MainTex[int2(x+1,y)] + _MainTex[int2(x,y+1)] + _MainTex[int2(x+1,y+1)])/4;
    
    return  avg;
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!

    // Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
    Result[id.xy] = calcAvg(id.xy);
}
